[build-system]
requires = ["setuptools>=69.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "stock-trading-suite"
version = "0.1.0"
description = "Production trading bot and research environment."
readme = "readme.md"
requires-python = ">=3.11,<3.14"
dependencies = [
    "numpy==2.1.3",
    "nvidia-ml-py>=13.580.82",
    "pandas>=2.2.3",
    "pandas_datareader",
    "python-dateutil",
    "pytz",
    "requests>=2.32,<3",
    "aiohttp>=3.10",
    "tqdm>=4.66",
    "loguru>=0.7.2",
    "retry>=0.9",
    "diskcache>=5.6.3",
    "cachetools>=6.2",
    "typer>=0.12",
    "SQLAlchemy>=2.0",
    "cvxpy>=1.4",
    "scikit-learn>=1.5",
    "matplotlib>=3.9",
    "seaborn>=0.13",
    "mplfinance>=0.12",
    "psutil>=5.9",
    "ta>=0.11",
    "scipy>=1.13",
    "pyqlib>=0.9.7; python_version < \"3.13\"",
    "beautifulsoup4>=4.12",
    "PyYAML>=6.0,<6.1",
    "jsonschema>=4.19",
    "pydantic>=2.9",
    "tblib>=3.2",
    "torch==2.9.0",
    "pytorch-lightning>=2.4.0,<3.0",
    "torch-optimizer>=0.3",
    "pytorch-optimizer>=2.11",
    "dill==0.3.8",
    "aioboto3==12.4.0",
    "boto3==1.34.69",
    "python-binance>=1.0.21",
    "alpaca-trade-api>=3.1",
    "alpaca-py>=0.42",
    "tensorboard>=2.17",
    "filelock>=3.15",
    "joblib>=1.4",
    "fsspec>=2024.9",
    "yarl>=1.9",
    "websocket-client>=1.7",
    "websockets>=9,<11",
]

[project.scripts]
diff-market-train = "differentiable_market.train:main"
diff-market-backtest = "differentiable_market.marketsimulator.run:main"
diff-market-toto-train = "differentiable_market_totoembedding.train:main"
diff-market-kronos-train = "differentiable_market_kronos.train:main"
stockagent2-pipeline = "stockagent2.cli:main"

[project.optional-dependencies]
dev = [
    "stock-trading-suite[all]",
    "black==24.10.0",
    "isort==5.13.2",
    "jupyter==1.1.1",
    "pytest>=8.3.3",
    "pytest-env==1.1.5",
    "pytest-asyncio==0.24.0",
    "types-tabulate==0.9.0.20241207",
    "types-PyYAML==6.0.12.20240917",
]

forecasting = [
    "chronos-forecasting>=1.5.3",
    "neuralforecast>=3.1",
    "gluonts[torch]>=0.15.1",
]

hf = [
    "transformers>=4.50",
    "datasets>=2.17",
    "accelerate>=1.10.1",
    "huggingface_hub>=0.24",
    "safetensors>=0.4",
    "einops>=0.8.1,<0.9",
    "jaxtyping==0.2.29",
    "rotary-embedding-torch==0.8.6",
]

rl = [
    "stable-baselines3>=2.3",
    "gymnasium>=0.29",
    "pufferlib>=2.0.2",
]

mlops = [
    "mlflow>=3.4.1,<3.6",
    "wandb>=0.22.2",
    "weave>=0.52.10",
]

opt = [
    "optuna>=3.6",
    "hyperopt>=0.2.7",
    "cmaes>=0.10",
]

llm = [
    "anthropic>=0.71.0",
    "openai>=1.0.0",
]

serving = [
    "fastapi>=0.115",
    "uvicorn>=0.30",
    "gunicorn>=23.0",
]

automation = [
    "selenium>=4.15",
]

boosting = [
    "xgboost>=2.1.1",
]

all = [
    "chronos-forecasting>=1.5.3",
    "neuralforecast>=3.1",
    "gluonts[torch]==0.16.2",
    "transformers>=4.50",
    "datasets>=2.17",
    "accelerate>=1.10.1",
    "huggingface_hub>=0.24",
    "safetensors>=0.4",
    "einops>=0.8.1,<0.9",
    "jaxtyping==0.2.29",
    "rotary-embedding-torch==0.8.6",
    "stable-baselines3>=2.3",
    "gymnasium>=0.29",
    "pufferlib>=2.0.2",
    "mlflow>=3.4.1,<3.6",
    "wandb>=0.22.2",
    "weave>=0.52.10",
    "optuna>=3.6",
    "hyperopt>=0.2.7",
    "cmaes>=0.10",
    "anthropic>=0.71.0",
    "openai>=1.0.0",
    "fastapi>=0.115",
    "uvicorn>=0.30",
    "gunicorn>=23.0",
    "selenium>=4.15",
    "xgboost>=2.1.1",
]

[tool.setuptools.packages.find]
where = [".", "src"]
exclude = [
    "tests",
    "tests.*",
    "external",
    "compiled_models",
    "runs",
    "results",
    "data",
    "lightning_logs*",
    "tensorboard_logs*",
]

[tool.uv]
# Keep cache local to the repo to avoid shared cache corruption and to maximize
# hardlink performance with the project's `.venv*`.
cache-dir = ".uvcache"
# Prefer faster, deterministic lookup; avoid scanning across indexes.
index-strategy = "first-index"
# Restrict solves to our actual target to speed locking.
environments = ["sys_platform == 'linux' and platform_machine == 'x86_64'"]
# Do not install dev groups by default; opt-in when needed.
default-groups = []

[tool.uv.workspace]
# Explicit workspace members for per-package installs. Add more as they stabilize.
members = [
    "differentiable_market",
    "differentiable_market_kronos",
    "differentiable_market_totoembedding",
    "gymrl",
    "hfshared",
    "hfinference",
    "hftraining",
    "marketsimulator",
    "pufferlibinference",
    "pufferlibtraining",
    "toto",
    "traininglib",
]

[[tool.uv.index]]
name = "pytorch-cu128"
url = "https://download.pytorch.org/whl/cu128"
explicit = true

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[[tool.uv.index]]
name = "pypi"
url = "https://pypi.org/simple"

[tool.uv.pip]
torch-backend = "auto"
extra-build-dependencies = { "flash-attn" = ["torch"] }

[tool.uv.sources]
stock-trading-suite = { workspace = true }
toto = { workspace = true }
torch = { index = "pytorch-cu128" }
torchvision = { index = "pytorch-cu128" }
torchaudio = { index = "pytorch-cu128" }
numpy = { index = "pypi" }
