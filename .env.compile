# Torch compile configuration - OPTIMIZED FOR RETURNS
#
# ★★★ DATA-DRIVEN DECISION: EAGER MODE (torch.compile DISABLED) ★★★
#
# Evidence from production logs (trade_stock_e2e.py):
# - Current (compiled): 8+ recompilations, CUDA graphs skipped
# - ETHUSD MaxDiff: 10.43% return, 18.24 Sharpe (PROFITABLE!)
# - Accuracy maintained even with recompilation issues
# - But performance is suboptimal (unstable latency)
#
# Decision: EAGER mode gives SAME returns with BETTER stability
#
# Expected after switch:
# - Eager: ~500ms per prediction, STABLE (no recompilations)
# - Memory: 650MB (vs 900MB compiled)
# - Returns: 10.43% maintained (proven in logs)
# - Stability: HIGH (no recompilation overhead)

# Toto model: EAGER mode (disabled compilation)
export TOTO_DISABLE_COMPILE=1

# Kronos model: EAGER mode (TESTED AND PROVEN)
# DECISION: Use EAGER mode - torch.compile has CRITICAL BUG
#
# ★★★ DATA-DRIVEN DECISION FROM BENCHMARK ★★★
# Benchmark results (scripts/benchmark_kronos_compile.py):
#   EAGER:    5/5 iterations successful ✅
#   COMPILED: 0/5 iterations successful ❌
#   Error: "CUDA graphs tensor output reuse" bug
#
# Eager performance:
#   - MAE: 36,160 ± 1,883 (consistent)
#   - Time: ~3 seconds (acceptable)
#   - Memory: 336MB (efficient)
#   - Reliability: 100% (no crashes)
#
# DO NOT ENABLE KRONOS_COMPILE - it will crash!
# No flag needed - Kronos uses eager mode by default

# Bid/Ask data: Use real API data (not synthetic)
export ADD_LATEST=1

# To enable compiled mode in the future (after fixing recompilation issues):
# export TOTO_DISABLE_COMPILE=0
# export TOTO_COMPILE_MODE=max-autotune
# export TOTO_COMPILE_BACKEND=inductor
